---
- name: Deploy Rook Ceph to Kubernetes
  hosts: node1
  #connection: local
  gather_facts: false
  become: true
  vars:
    rook_repo: "https://github.com/rook/rook.git"
    rook_branch: "v1.17.1"
    rook_dir: "{{ rook_dir }}"

  tasks:
    
    #- name: Ensure git is installed
     # apt:
      #  name: git
       # state: present
        #update_cache: yes
  
    #- debug: var=hostvars[Controll node]['ansible_default_ipv4']['address']
    - name: Show host's ip
      debug:
        msg: "{{ ansible_ssh_host }}"

    #- name: Check if kubectl is available

      #command: which kubectl
      #register: kubectl_check
      #ignore_errors: true

    #- name: Fail if kubectl is not installed
      #fail:
       # msg: "kubectl is not installed on this system."
      #when: kubectl_check.rc != 0

    #- name: Show kubectl version
      #command: kubectl version --client --short
      #register: kubectl_version
      #when: kubectl_check.rc == 0

    #- name: Display kubectl version
      #debug:
        #msg: "{{ kubectl_version.stdout }}"
      #when: kubectl_check.rc == 0



    - name: Clone Rook repo (v1.17.1)

      git:
        repo: "{{ rook_repo }}"
        dest: "{{ rook_dir }}"
        version: "{{ rook_branch }}"
        single_branch: yes

    - name: Apply CRDs, common, and operator configs
      command: kubectl apply -f crds.yaml -f common.yaml -f operator.yaml
      args:
        chdir: "{{ rook_dir }}/deploy/examples"

    - name: Create Ceph cluster
      command: kubectl apply -f cluster.yaml
      args:
        chdir: "{{ rook_dir }}/deploy/examples"

    - name: Wait for pods in rook-ceph namespace to be ready
      shell: |
        kubectl -n rook-ceph wait --for=condition=Ready pod --all --timeout=180s
      register: pod_wait_result
      failed_when: "'condition met' not in pod_wait_result.stdout"

    - name: Check that the cluster is running
      command: kubectl -n rook-ceph get pod
      register: result
    - debug:
        var: result.stdout_lines
